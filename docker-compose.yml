version: "3.8"

services:
  # MongoDB database
  mongodb:
    image: mongo:7.0
    container_name: blog-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: blog_db
    volumes:
      - mongodb_data:/data/db
      - ./mongodb/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - blog-network

  # Backend API Server
  server:
    build:
      context: .
      dockerfile: Apps/Server/Dockerfile
    container_name: blog-server
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/blog_db?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
    depends_on:
      - mongodb
    volumes:
      - uploads_data:/app/uploads
    networks:
      - blog-network

  # Client React App
  client:
    build:
      context: .
      dockerfile: Apps/Client/Dockerfile
    container_name: blog-client
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      REACT_APP_API_URL: http://localhost:5000
    depends_on:
      - server
    networks:
      - blog-network

  # Dashboard Vite App
  dashboard:
    build:
      context: .
      dockerfile: Apps/Dashboard/Dockerfile
    container_name: blog-dashboard
    restart: unless-stopped
    ports:
      - "4000:80"
    environment:
      VITE_API_URL: http://localhost:5000
    depends_on:
      - server
    networks:
      - blog-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: blog-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - client
      - dashboard
      - server
    networks:
      - blog-network

volumes:
  mongodb_data:
  uploads_data:

networks:
  blog-network:
    driver: bridge
